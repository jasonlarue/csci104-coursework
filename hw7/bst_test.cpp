#include "bst.h"
#include <string>
#include <iostream>

using namespace std;

int main() {
	BinarySearchTree<int, string> b, c, d;
	pair<int, string> item5(5, "five");
	pair<int, string> item3(3, "three");
	pair<int, string> item7(7, "seven");
	pair<int, string> item4(4, "four");
	pair<int, string> item6(6, "six");
	pair<int, string> item9(9, "nine");
	pair<int, string> item10(10, "ten");
	pair<int, string> item2(2, "two");
	pair<int, string> item8(8, "eight");
	pair<int, string> item13(13, "thirteen");
	pair<int, string> item11(11, "eleven");
	pair<int, string> item12(12, "twelve");
	pair<int, string> item15(15, "fifteen");
	pair<int, string> item14(14, "fourteen");
	pair<int, string> item16(16, "sixteen");
	pair<int, string> item17(17, "seventeen");


	b.insert(item5);
	b.print();
	cout << b.height() << endl;
	b.remove(7);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(5);
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.insert(item5);
	b.insert(item3);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(5);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(3);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.insert(item5);
	b.insert(item3);
	b.insert(item7);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(5);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(7);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(3);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.insert(item5);
	b.insert(item3);
	b.insert(item7);
	b.insert(item4);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(5);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.clear();
	cout << b.height() << endl;
	b.insert(item5);
	b.insert(item3);
	b.insert(item7);
	b.insert(item4);
	b.insert(item6);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(6);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(4);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.clear();
	b.insert(item5);
	b.insert(item3);
	b.insert(item7);
	b.insert(item4);
	b.insert(item6);
	b.insert(item9);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(5);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(7);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(6);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.clear();
	b.insert(item5);
	b.insert(item3);
	b.insert(item7);
	b.insert(item4);
	b.insert(item6);
	b.insert(item9);
	b.insert(item10);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(5);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(9);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(3);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(7);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(4);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(10);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(10);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(6);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.insert(item5);
	b.insert(item3);
	b.insert(item7);
	b.insert(item4);
	b.insert(item6);
	b.insert(item9);
	b.insert(item10);
	b.insert(item2);
	b.insert(item8);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.insert(item13);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.insert(item12);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.insert(item11);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(13);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(12);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;
	b.remove(10);
	b.remove(13);
	b.remove(7);
	b.remove(8);
	b.remove(7);
	b.print();
	cout << b.height() << endl;
	cout << boolalpha << b.isBalanced() << endl;

	d.insert(item10);
	d.insert(item3);
	d.insert(item2);
	d.insert(item15);
	d.insert(item12);
	d.insert(item11);
	d.insert(item14);
	d.insert(item13);
	d.insert(item16);
	d.insert(item17);

	d.print();
	cout << d.height() << endl;
	cout << d.isBalanced() << endl;

	cout << "crash1" << endl;
	d.remove(15);
	cout << "crash2" << endl;


	d.print(); //i crash here
	cout << "crash3" << endl;
	cout << d.height() << endl;
	cout << "crash4" << endl;
	cout << boolalpha << d.isBalanced() << endl;
	cout << "crash5" << endl;


	d.remove(10);
	cout << "I didn't crash!" << endl;
	d.print();
	cout << d.height() << endl;
	cout << boolalpha << d.isBalanced() << endl;

	c.insert(item5);
	c.insert(item3);
	c.insert(item7);
	c.insert(item4);
	c.insert(item6);
	c.insert(item9);
	c.insert(item10);
	c.insert(item2);
	c.insert(item8);
	c.insert(item15);
	c.insert(item11);
	c.insert(item14);
	c.insert(item13);
	c.insert(item12);
	c.print();

	c.remove(15);
	c.remove(14);

	c.print();
	cout << c.height() << endl;
	cout << boolalpha << c.isBalanced() << endl;

	return 0;
}
